GENERAL

Nugat paketi su nista vise do zip fajlovi sa prekompajliranim kodom i moramo da ih dodajemo po potrebi u nasoj aplikaciji.
Ovde nam je neophodan Microsoft.Data.Sqlite. Svaki put kada instaliramo NuGet paket moramo da "restore-ujemo" dependecies folder.

Na kraju using strukture metoda Dispose IDisposable interfejsa se automatski poziva. Mora da se koristi connection.Close().
Za proveru ispravnosti unetih brojevnih vrednosti i datuma umesto regularnih izraza bolje je koristiti TryParse metodu.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE RECORD

string connectionString = @"Data Source=habit-tracker-devhawkz.db";

        using (var connection = new SqliteConnection(connectionString))
        {
            connection.Open(); // otvara se veza sa bazom podataka
            var tableCmd = connection.CreateCommand(); // kreiranje komande koju saljemo bazi podataka

            tableCmd.CommandText = @"CREATE TABLE IF NOT EXISTS drinking_water 
                                    (
                                        Id INTEGER PRIMARY KEY AUTOINCREMENT,
                                        Date TEXT,
                                        Quantity INTEGER
                                    )"; // vrsta komande (Select, Create ...)

            tableCmd.ExecuteNonQuery(); // izvrsavanje te komande (ExecuteNonQuery() znaci da ne zelimo da baza podataka vrati bilo koju vrednost, koristimo je jer zelimo samo da kreira tabelu za nas
            connection.Close(); // zatvaranje konekcije sa bazom
        }





------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UPDATE RECORD 

                var tableCheck = connection.CreateCommand();
                 
                //proverava da li u tabeli postoji red sa datim id-em ako postoji vraca taj red EXISTS u SQL proverava da li podupit vraca neku vrednost (vraca 1 ako podupit 		vraca neku vrednost 
                tableCheck.CommandText = $"SELECT EXISTS(SELECT 1 from drinking_water WHERE Id = {recordId})";
                 
                // vraca 1. kolonu 1. reda dobijenog iz prethodnog upita, ako takav red ne postoji vraca null
                int checkQuery = Convert.ToInt32(tableCheck.ExecuteScalar());

                // provera da li postoji red sa datim ID-em
                if(checkQuery == 0)
                {
                    Console.WriteLine($"\nRecord with ID {recordId} doesn't exists");
                    connection.Close();
                    UpdateRecord();
                }